{"version":3,"sources":["../../server/controllers/PostController.js"],"names":["postController","post","request","response","body","title","text","link","userId","Post","_creator","save","then","newPost","status","json","success","data","catch","err","message","getAll","find","populate","path","select","match","posts"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,iBAAiB,EAAvB;;AAEAA,eAAeC,IAAf,GAAsB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAAA,qBACRD,QAAQE,IADA;AAAA,KACrCC,KADqC,iBACrCA,KADqC;AAAA,KAC9BC,IAD8B,iBAC9BA,IAD8B;AAAA,KACxBC,IADwB,iBACxBA,IADwB;AAAA,KAClBC,MADkB,iBAClBA,MADkB;;AAG5C;;AAEA,KAAMP,OAAO,IAAI,iBAAGQ,IAAP,CAAY;AACxBJ,SAAOA,KADiB;AAExBC,QAAMA,IAFkB;AAGxBC,QAAMA,IAHkB;AAIxBG,YAAUF;AAJc,EAAZ,CAAb;;AAOAP,MAAKU,IAAL,GAAYC,IAAZ,CAAiB,UAACC,OAAD,EAAa;AAC7B,SAAOV,SAASW,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAChCC,YAAS,IADuB;AAEhCC,SAAMJ;AAF0B,GAA1B,CAAP;AAIA,EALD,EAKGK,KALH,CAKS,UAACC,GAAD,EAAS;AACjB,SAAOhB,SAASW,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAChCK,YAASD;AADuB,GAA1B,CAAP;AAGA,EATD;AAUA,CAtBD;;AAwBAnB,eAAeqB,MAAf,GAAwB,UAACnB,OAAD,EAAUC,QAAV,EAAuB;AAC9C,kBAAGM,IAAH,CAAQa,IAAR,CAAa,EAAb,EAAiBC,QAAjB,CAA0B;AACzBC,QAAM,UADmB;AAEzBC,UAAQ;AAFiB,EAA1B,EAGGF,QAHH,CAGY;AACXC,QAAM,WADK;AAEXC,UAAQ,eAFG;AAGXC,SAAO,EAAE,aAAa,KAAf;AAHI,EAHZ,EAOGd,IAPH,CAOQ,UAACe,KAAD,EAAW;AAClB,SAAOxB,SAASW,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAChCC,YAAS,IADuB;AAEhCC,SAAMU;AAF0B,GAA1B,CAAP;AAIA,EAZD,EAYGT,KAZH,CAYS,UAACC,GAAD,EAAS;AACjB,SAAOhB,SAASW,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAChCK,YAASD;AADuB,GAA1B,CAAP;AAGA,EAhBD;AAiBA,CAlBD;;kBAoBenB,c","file":"PostController.js","sourcesContent":["import db from './../models';\n\nconst postController = {};\n\npostController.post = (request, response) => {\n\tconst {title, text, link, userId} = request.body;\n\n\t// Validation should be done here\n\n\tconst post = new db.Post({\n\t\ttitle: title,\n\t\ttext: text,\n\t\tlink: link,\n\t\t_creator: userId\n\t});\n\n\tpost.save().then((newPost) => {\n\t\treturn response.status(200).json({\n\t\t\tsuccess: true,\n\t\t\tdata: newPost\n\t\t});\n\t}).catch((err) => {\n\t\treturn response.status(500).json({\n\t\t\tmessage: err\n\t\t});\n\t});\n};\n\npostController.getAll = (request, response) => {\n\tdb.Post.find({}).populate({\n\t\tpath: '_creator',\n\t\tselect: 'username createDate-_id'\n\t}).populate({\n\t\tpath: '_comments',\n\t\tselect: 'text _creator',\n\t\tmatch: { 'isRemoved': false }\n\t}).then((posts) => {\n\t\treturn response.status(200).json({\n\t\t\tsuccess: true,\n\t\t\tdata: posts\n\t\t});\n\t}).catch((err) => {\n\t\treturn response.status(500).json({\n\t\t\tmessage: err\n\t\t});\n\t});\n};\n\nexport default postController;"]}